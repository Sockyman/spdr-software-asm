once
provides "stdlib/lcd.spdr"
provides "stdlib/scancode.spdr"
provides "cli.spdr"
provides "stdlib/getc.spdr"
provides "stdlib/read_scancode.spdr"
provides "stdlib/isr.spdr"
provides "stdlib/print_string.spdr"
provides "stdlib/lcd_init.spdr"
provides "stdlib/print_hex_8.spdr"
provides "stdlib/print_hex_4.spdr"
provides "upload_test.spdr"
provides "stdlib/mem_compare.spdr"
provides "ins_set.spdr"
START_ADDRESS = 0x9000 ; (36864)
LCD_CLEAR = 0x0001 ; (1)
LCD_RETURN = 0x0002 ; (2)
LCD_ENTRY = 0x0004 ; (4)
LCD_DISPLAY = 0x000c ; (12)
LCD_SHIFT = 0x0010 ; (16)
LCD_FUNCTION = 0x0038 ; (56)
LCD_CGRAM = 0x0040 ; (64)
LCD_DDRAM = 0x0080 ; (128)
LCD_ENTRY_INCREMENT = 0x0002 ; (2)
LCD_DISPLAY_CURSOR = 0x0002 ; (2)
LCD_DISPLAY_BLINK = 0x0001 ; (1)
LCD_SHIFT_DISPLAY = 0x0008 ; (8)
LCD_SHIFT_RIGHT = 0x0004 ; (4)
LCD_LINE_2 = 0x00c0 ; (192)
SCAN_RELEASE = 0x00f0 ; (240)
SCAN_EXTENDED = 0x00e0 ; (224)
SCAN_SHIFT = 0x0012 ; (18)
SCAN_SHIFT_RIGHT = 0x0059 ; (89)
SCAN_ENTER = 0x005a ; (90)
SCAN_BSPC = 0x0066 ; (102)
SCAN_ESC = 0x0076 ; (118)
input_line = 0x8000 ; (32768)
addr = 0x8011 ; (32785)
register_dump = 0x8013 ; (32787)
kernel = 0x0000 ; (0)
monitor_loop = 0x0024 ; (36)
monitor_loop.cmd_loop = 0x0030 ; (48)
monitor_loop.enter_pressed = 0x0041 ; (65)
monitor_loop.esc_pressed = 0x0048 ; (72)
monitor_loop.end = 0x004b ; (75)
STRING_LEN = 0x0010 ; (16)
LINE_LEN = 0x0011 ; (17)
WRITE_CHAR = 0x0001 ; (1)
CURSOR_LEFT = 0x0002 ; (2)
CURSOR_RIGHT = 0x0004 ; (4)
KBD_RELEASE = 0x0001 ; (1)
KBD_SHIFT = 0x0002 ; (2)
KBD_CTRL = 0x0004 ; (4)
KEY_ENTER = 0x000a ; (10)
KEY_BSPC = 0x0008 ; (8)
KEY_INSERT = 0x0019 ; (25)
KEY_SHIFT_INSERT = 0x001a ; (26)
KEY_ESC = 0x001b ; (27)
KEY_LEFT = 0x0011 ; (17)
KEY_UP = 0x0012 ; (18)
KEY_RIGHT = 0x0013 ; (19)
KEY_DOWN = 0x0014 ; (20)
KEY_DELETE = 0x007f ; (127)
ISR_ADDRESS = 0x0100 ; (256)
scan_buffer = 0x8100 ; (33024)
wptr = 0x8200 ; (33280)
rptr = 0x8201 ; (33281)
isr = 0x0100 ; (256)
read_scancode = 0x010f ; (271)
read_scancode.no_code = 0x0120 ; (288)
kbd_flags = 0x8202 ; (33282)
getc = 0x0123 ; (291)
getc.loop = 0x0123 ; (291)
getc.no_shift = 0x0156 ; (342)
getc.shift_key = 0x015f ; (351)
getc.release_key = 0x016a ; (362)
getc.flip_release = 0x0177 ; (375)
ascii_map = 0x0200 ; (512)
ascii_map_shift = 0x0280 ; (640)
cursor = 0x8203 ; (33283)
line_ptr = 0x8204 ; (33284)
cli_row = 0x8206 ; (33286)
reset_cli = 0x0300 ; (768)
cli_action = 0x0319 ; (793)
cli_action.no_shift_left = 0x032d ; (813)
cli_action.no_write_char = 0x033c ; (828)
cli_action.no_shift_right = 0x0351 ; (849)
string_put = 0x0352 ; (850)
cli_loop = 0x0366 ; (870)
cli_loop.write_key = 0x037f ; (895)
cli_loop.right_pressed = 0x0388 ; (904)
cli_loop.left_pressed = 0x0391 ; (913)
cli_loop.bspc_pressed = 0x039a ; (922)
cli_loop.end = 0x03a5 ; (933)
set_cursor = 0x03a8 ; (936)
reset_cursor = 0x03b5 ; (949)
cli_redraw = 0x03bf ; (959)
print_string = 0x03d0 ; (976)
print_string.continue = 0x03d7 ; (983)
clear_line = 0x03e0 ; (992)
clear_line.loop = 0x03e3 ; (995)
clear_line.end = 0x03f1 ; (1009)
lcd_init = 0x03f5 ; (1013)
print_hex_4 = 0x0404 ; (1028)
hex_values = 0x040d ; (1037)
print_hex_8 = 0x041d ; (1053)
READY_CODE = 0x00ff ; (255)
DONE_CODE = 0x00fe ; (254)
SIZE_CODE = 0x00fd ; (253)
ERROR_CODE = 0x00fc ; (252)
MAGIC = 0x00aa ; (170)
transfer_counter = 0x8207 ; (33287)
program_ptr = 0x8208 ; (33288)
file_loader = 0x0433 ; (1075)
file_loader.read = 0x043f ; (1087)
file_loader.wait = 0x0452 ; (1106)
file_loader.wait.loop = 0x0454 ; (1108)
file_loader.size = 0x045b ; (1115)
file_loader.size.loop = 0x0464 ; (1124)
file_loader.size.end = 0x0471 ; (1137)
file_loader.done = 0x047a ; (1146)
parse_cmd = 0x047b ; (1147)
parse_cmd.parse_goto = 0x04af ; (1199)
parse_cmd.parse_jump = 0x04c3 ; (1219)
parse_cmd.parse_jump.wait_loop = 0x04c7 ; (1223)
parse_cmd.parse_jump.run_program = 0x04d2 ; (1234)
parse_cmd.parse_advance = 0x04e6 ; (1254)
parse_cmd.parse_instruction = 0x04ef ; (1263)
parse_cmd.parse_hexdump = 0x04fb ; (1275)
parse_cmd.parse_register = 0x0502 ; (1282)
parse_cmd.parse_disassemble = 0x050f ; (1295)
parse_cmd.parse_load = 0x0516 ; (1302)
parse_cmd.parse_insert = 0x0521 ; (1313)
parse_cmd.insert_loop = 0x0523 ; (1315)
parse_cmd.get_16 = 0x0546 ; (1350)
parse_cmd.error = 0x0554 ; (1364)
parse_cmd.end = 0x0563 ; (1379)
error_text = 0x0564 ; (1380)
monitor_redraw = 0x0576 ; (1398)
monitor_redraw.end = 0x0587 ; (1415)
dump_line = 0x0588 ; (1416)
dump_line.byte_loop = 0x0597 ; (1431)
dump_line.end = 0x05aa ; (1450)
dump_line.byte_counter = 0x820a ; (33290)
dissasembler = 0x05ab ; (1451)
dissasembler.key_loop = 0x05c6 ; (1478)
dissasembler.esc_pressed = 0x05e1 ; (1505)
dissasembler.enter_pressed = 0x05e2 ; (1506)
dissasembler.right_pressed = 0x05f1 ; (1521)
dissasembler.left_pressed = 0x05fa ; (1530)
dissasembler.end = 0x0603 ; (1539)
next_ins = 0x820b ; (33291)
dissasemble_line = 0x0606 ; (1542)
dissasemble_line.print_loop = 0x0625 ; (1573)
dissasemble_line.print_loop.print_done = 0x0632 ; (1586)
dissasemble_line.print_args = 0x0635 ; (1589)
dissasemble_line.print_args.direct = 0x0644 ; (1604)
dissasemble_line.print_args.immediate = 0x065d ; (1629)
dissasemble_line.print_args.implied = 0x066d ; (1645)
dissasemble_line.print_args.done = 0x0673 ; (1651)
dissasemble_line.count = 0x820d ; (33293)
dissasemble_line.current_addr = 0x820e ; (33294)
fill_spaces = 0x0674 ; (1652)
fill_spaces.loop = 0x0678 ; (1656)
fill_spaces.end = 0x0680 ; (1664)
get_instruction = 0x0682 ; (1666)
get_instruction.acc = 0x8210 ; (33296)
hexdump = 0x06a9 ; (1705)
hexdump.loop = 0x06b3 ; (1715)
hexdump.loop.fix_address = 0x06b3 ; (1715)
hexdump.loop.fix_address.off_right = 0x06c3 ; (1731)
hexdump.loop.fix_address.off_left = 0x06d6 ; (1750)
hexdump.loop.draw = 0x06e6 ; (1766)
hexdump.loop.move_cursor = 0x06fe ; (1790)
hexdump.loop.move_cursor.high = 0x070e ; (1806)
hexdump.key_loop = 0x0711 ; (1809)
hexdump.modify_value = 0x0738 ; (1848)
hexdump.modify_value.high_nibble = 0x075c ; (1884)
hexdump.modify_value.changed = 0x0768 ; (1896)
hexdump.up_pressed = 0x0777 ; (1911)
hexdump.down_pressed = 0x0785 ; (1925)
hexdump.right_pressed = 0x0793 ; (1939)
hexdump.left_pressed = 0x079f ; (1951)
hexdump.enter_pressed = 0x07ab ; (1963)
hexdump.flip_end = 0x07ac ; (1964)
hexdump.end = 0x07b3 ; (1971)
hexdump.hex_value = 0x8212 ; (33298)
hexdump.line_offset = 0x8213 ; (33299)
hexdump.nibble = 0x8214 ; (33300)
skip_ws = 0x07b6 ; (1974)
skip_ws.end = 0x07c1 ; (1985)
parse_hex_4 = 0x07c2 ; (1986)
get_hex_4 = 0x07c5 ; (1989)
get_hex_4.not_digit = 0x07d4 ; (2004)
get_hex_4.not_upper = 0x07e3 ; (2019)
get_hex_4.not_lower = 0x07f2 ; (2034)
get_hex_4.end = 0x07f5 ; (2037)
parse_hex_8 = 0x07f8 ; (2040)
parse_hex_8.fail = 0x0813 ; (2067)
parse_hex_8.high_nibble = 0x8215 ; (33301)
parse_hex_16 = 0x0814 ; (2068)
parse_hex_16.fail = 0x0828 ; (2088)
insert_byte = 0x0829 ; (2089)
mem_compare = 0x083b ; (2107)
mem_compare.loop = 0x0841 ; (2113)
mem_compare.not_equal = 0x0868 ; (2152)
mem_compare.equal = 0x0869 ; (2153)
mem_compare.comparison = 0x8216 ; (33302)
mem_compare.a = 0x8217 ; (33303)
mem_compare.b = 0x8219 ; (33305)
mem_compare.count = 0x821b ; (33307)
insert_instruction = 0x086c ; (2156)
insert_instruction.transfer_instruction = 0x0870 ; (2160)
insert_instruction.transfer_instruction.transfer_loop = 0x087f ; (2175)
insert_instruction.transfer_instruction.transfer_space = 0x089f ; (2207)
insert_instruction.transfer_instruction.done_transfer_space = 0x08ab ; (2219)
insert_instruction.transfer_instruction.done_transfer = 0x08b1 ; (2225)
insert_instruction.get_opcode = 0x08bb ; (2235)
insert_instruction.get_opcode.opcode_loop = 0x08ca ; (2250)
insert_instruction.get_opcode.opcode_loop.not_end = 0x08da ; (2266)
insert_instruction.get_opcode.opcode_loop.done = 0x0912 ; (2322)
insert_instruction.handle_sizes = 0x0912 ; (2322)
insert_instruction.handle_sizes.immediate = 0x092f ; (2351)
insert_instruction.handle_sizes.implied = 0x0946 ; (2374)
insert_instruction.handle_sizes.direct = 0x0950 ; (2384)
insert_instruction.end = 0x0968 ; (2408)
insert_instruction.fail = 0x096b ; (2411)
insert_instruction.input_ptr = 0x821d ; (33309)
insert_instruction.char_count = 0x821f ; (33311)
insert_instruction.buffer_ptr = 0x8220 ; (33312)
insert_instruction.buffer = 0x8222 ; (33314)
insert_instruction.opcode = 0x8227 ; (33319)
INS_STRING_LEN = 0x0005 ; (5)
INS_ELEMENT_SIZE = 0x0006 ; (6)
INSTRUCTION_COUNT = 0x006a ; (106)
instruction_set = 0x096e ; (2414)
instruction_set_end = 0x0bea ; (3050)

